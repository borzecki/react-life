{"version":3,"sources":["utils.js","reducer.js","actions.js","components/Controls.jsx","hooks/useInterval.js","components/LifeGrid.jsx","hooks/useWindowSize.js","components/GameOfLife.jsx","index.js"],"names":["directions","isActive","id","list","indexOf","toggleItem","filter","k","nextGeneration","active","rows","cols","result","slice","xprod","range","coords","forEach","i","j","neighbours","n","length","activeNeighbours","map","si","sj","width","height","withinBounds","ni","nj","neighbourIndexes","splice","push","randomize","count","identity","times","Math","random","mobileDimensions","defaultDimensions","initialState","resize","type","ControlContainer","styled","div","Button","button","Controls","useState","play","setPlay","dispatch","useDispatch","callback","delay","savedCallback","useRef","useEffect","current","setInterval","clearInterval","useInterval","onClick","Wrapper","StyledCell","Cell","useSelector","state","LifeGrid","toggleCell","Array","keys","key","getSize","isClient","window","innerWidth","undefined","innerHeight","GameOfLife","windowSize","setWindowSize","handleResize","addEventListener","removeEventListener","useWindowSize","store","createStore","action","mergeRight","__REDUX_DEVTOOLS_EXTENSION__","render","document","getElementById"],"mappings":"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","file":"static/js/main.e5bbac6e.chunk.js","sourcesContent":["import { range, xprod, filter, identity, times } from \"ramda\";\n\nconst directions = [\n  [-1, -1],\n  [-1, 0],\n  [-1, 1], // top neighbours\n  [0, -1],\n  [0, 1], // middle\n  [1, -1],\n  [1, 0],\n  [1, 1], // bottom\n];\n\nconst isActive = (id, list) => list.indexOf(id) > -1;\nexport const toggleItem = (id, list) =>\n  isActive(id, list) ? list.filter((k) => k !== id) : [id, ...list];\n\nconst withinBounds = (i, j, width, height) =>\n  i >= 0 && i < width && j >= 0 && j < height;\n\n// generate list of pairs of coordinates\n// [[a, b]: for a in [0..x], b in [0..y]]\nconst coords = (rows, cols) => xprod(range(0, rows), range(0, cols));\n\n// for given cell [i, j] return viable neighbours in flat form (x*cols + y)\nconst neighbourIndexes = (i, j, rows, cols) =>\n  directions\n    .map(([si, sj]) => [si + i, sj + j])\n    .filter(([ni, nj]) => withinBounds(ni, nj, rows, cols))\n    .map(([ni, nj]) => ni * cols + nj);\n\nconst activeNeighbours = (neighbours, active) =>\n  neighbours.filter((n) => isActive(n, active)).length;\n\nexport const nextGeneration = ({ active, rows, cols }) => {\n  const result = active.slice(0);\n\n  coords(rows, cols).forEach(([i, j]) => {\n    const id = i * cols + j;\n    const neighbours = activeNeighbours(\n      neighbourIndexes(i, j, rows, cols),\n      active\n    );\n    if (neighbours < 2 || neighbours > 3) {\n      result.indexOf(id) !== -1 && result.splice(result.indexOf(id), 1);\n    } else if (!isActive(id, active) && neighbours === 3) {\n      result.push(id);\n    }\n  });\n\n  return result;\n};\n\nexport const randomize = (count) =>\n  filter(\n    identity,\n    times((i) => (Math.random() > 0.7 ? i : false), count)\n  );\n","import { mergeRight } from \"ramda\";\nimport { randomize, nextGeneration, toggleItem } from \"./utils\";\n\nexport const mobileDimensions = { rows: 40, cols: 30 };\nexport const defaultDimensions = { rows: 30, cols: 70 };\n\nexport const initialState = { ...defaultDimensions, active: [] };\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case \"resize\": // update game dimensions\n      return mergeRight(state, { rows: action.rows, cols: action.cols });\n    case \"toggle\": // change state of individual cell\n      return mergeRight(state, { active: toggleItem(action.id, state.active) });\n    case \"tick\": // calculate next state of the game\n      return mergeRight(state, { active: nextGeneration(state) });\n    case \"randomize\": // randomize active cells\n      return mergeRight(state, { active: randomize(state.rows * state.cols) });\n    default:\n      return state;\n  }\n};\n","export const resize = ({ rows, cols }) => ({ type: \"resize\", rows, cols });\nexport const toggle = (id) => ({ type: \"toggle\", id });\nexport const tick = () => ({ type: \"tick\" });\nexport const randomize = () => ({ type: \"randomize\" });\n","import React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport { useDispatch } from \"react-redux\";\n\nimport { tick, randomize } from \"../actions\";\nimport useInterval from \"../hooks/useInterval\";\n\nconst ControlContainer = styled.div`\n  margin: 5% 0 5% 5%;\n  display: flex;\n  flex-direction: row;\n`;\n\nconst Button = styled.button`\n  background: transparent;\n  border: 1px solid #0003;\n  color: #0007;\n  height: 2em;\n  font-size: 1em;\n  margin: 0.5em;\n  cursor: pointer;\n\n  @media (min-width: 768px) {\n    width: 15em;\n  }\n\n  @media (hover: hover) and (pointer: fine) {\n    :hover {\n      background: #dedbd2;\n    }\n  }\n\n  ${({ isActive }) => isActive && `background: #ee6c4d; color: #fff`};\n`;\n\nconst Controls = () => {\n  const [play, setPlay] = useState(false);\n  const dispatch = useDispatch();\n  const sendTick = () => dispatch(tick());\n\n  // send tick every 100ms if play is active\n  useInterval(sendTick, play ? 100 : null);\n\n  return (\n    <ControlContainer>\n      <Button onClick={() => dispatch(tick())}>tick</Button>\n      <Button isActive={play} onClick={() => setPlay(!play)}>\n        {play ? \"pause\" : \"play\"}\n      </Button>\n      <Button onClick={() => dispatch(randomize())}>randomize</Button>\n    </ControlContainer>\n  );\n};\n\nexport default Controls;\n","import { useEffect, useRef } from \"react\";\n\nexport default (callback, delay) => {\n  const savedCallback = useRef();\n\n  useEffect(() => {\n    savedCallback.current = callback;\n  }, [callback]);\n\n  useEffect(() => {\n    function tick() {\n      savedCallback.current();\n    }\n    if (delay !== null) {\n      let id = setInterval(tick, delay);\n      return () => clearInterval(id);\n    }\n  }, [delay]);\n};\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { useSelector } from \"react-redux\";\n\nconst Wrapper = styled.div`\n  display: grid;\n  grid-template-columns: repeat(${({ cols }) => cols}, 1fr);\n  margin: 5%;\n`;\n\nconst StyledCell = styled.div`\n  border: 1px solid #0003;\n  margin: 0.5px;\n  cursor: pointer;\n\n  display: grid;\n  place-items: center;\n\n  &::before {\n    content: \"\";\n    display: block;\n    padding-bottom: 100%;\n    grid-area: 1 / 1 / 2 / 2;\n  }\n\n  @media (hover: hover) and (pointer: fine) {\n    :hover {\n      background: #dedbd2;\n    }\n  }\n\n  ${({ isActive }) => isActive && `background: #ee6c4d;`};\n`;\n\nconst Cell = ({ id, onClick }) => {\n  const isActive = useSelector((state) => state.active.indexOf(id) > -1);\n  return <StyledCell isActive={isActive} onClick={() => onClick(id)} />;\n};\n\nconst LifeGrid = ({ cols, rows, toggleCell }) => {\n  return (\n    <Wrapper cols={cols}>\n      {[...Array(rows * cols).keys()].map((i) => (\n        <Cell key={i} id={i} onClick={toggleCell} />\n      ))}\n    </Wrapper>\n  );\n};\n\nexport default LifeGrid;\n","import { useEffect, useState } from \"react\";\n\nconst getSize = () => ({\n  width: isClient ? window.innerWidth : undefined,\n  height: isClient ? window.innerHeight : undefined,\n});\nconst isClient = typeof window === \"object\";\n\nexport default () => {\n  const [windowSize, setWindowSize] = useState(getSize);\n\n  const handleResize = () => setWindowSize(getSize());\n\n  useEffect(() => {\n    if (!isClient) return false;\n\n    window.addEventListener(\"resize\", handleResize);\n    return () => window.removeEventListener(\"resize\", handleResize);\n  });\n  return windowSize;\n};\n","import React, { useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\n\nimport Controls from \"./Controls\";\nimport LifeGrid from \"./LifeGrid\";\n\nimport useWindowSize from \"../hooks/useWindowSize\";\nimport { defaultDimensions, mobileDimensions } from \"../reducer\";\nimport { toggle, resize } from \"../actions\";\n\nconst GameOfLife = () => {\n  const { width } = useWindowSize();\n\n  const dispatch = useDispatch();\n  const rows = useSelector((state) => state.rows);\n  const cols = useSelector((state) => state.cols);\n  const toggleCell = (i) => dispatch(toggle(i));\n\n  useEffect(() => {\n    if (width > 768 && cols !== 70) dispatch(resize(defaultDimensions));\n    if (width <= 768 && cols !== 30) dispatch(resize(mobileDimensions));\n  }, [width, cols, dispatch]);\n\n  return (\n    <>\n      <Controls />\n      <LifeGrid cols={cols} rows={rows} toggleCell={toggleCell} />\n    </>\n  );\n};\n\nexport default GameOfLife;\n","import React from \"react\";\nimport { render } from \"react-dom\";\nimport { createStore } from \"redux\";\nimport { Provider } from \"react-redux\";\n\nimport reducer from \"./reducer\";\nimport GameOfLife from \"./components/GameOfLife\";\n\nconst store = createStore(\n  reducer,\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n);\n\nrender(\n  <Provider store={store}>\n    <GameOfLife />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}